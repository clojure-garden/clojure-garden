{:platform.system/jetty {:router #ig/ref :platform.system/router
                         :host            "0.0.0.0"
                         :port            8080}

 :platform.system/router {:cors {:access-control-allow-origin  ".*"
                                 :access-control-allow-methods #{:head :options :get :post}
                                 :access-control-allow-headers #{:accept :content-type :accept-language :x-session-id :x-csrf-token}}
                          :db #ig/ref :platform.system/database}

 :platform.system/database-migrator {:store                        :database
                                     :migration-dir                "database/migrations"
                                     :migration-table-name         "schema_migrations"
                                     :init-in-transaction?         true
                                     :db                   #ig/ref :platform.system/database}

 :platform.system/database {:auto-commit                 true
                            :read-only                   false
                            :connection-timeout          30000
                            :validation-timeout          5000
                            :idle-timeout                600000
                            :max-lifetime                1800000
                            :minimum-idle                10
                            :maximum-pool-size           10
                            :pool-name                   "db-pool"
                            :adapter                     "postgresql"
                            :username           #profile {:develop       #env BACKEND_PG_USER
                                                          :stage         #env DATABASE_USER}
                            :password           #profile {:develop       #env BACKEND_PG_PASSWORD
                                                          :stage         #env DATABASE_PASSWORD}
                            :database-name      #profile {:develop       #env BACKEND_PG_DATABASE_NAME
                                                          :stage         #env DATABASE_NAME}
                            :server-name        #profile {:develop            "localhost"
                                                          :stage         #env DATABASE_HOST}
                            :port-number        #profile {:develop #long #env BACKEND_PG_PORT
                                                          :stage   #long #env DATABASE_PORT}
                            :register-mbeans             false}

 :platform.system/github-client  {:service-name                :service-github
                                  :graphql-url                 "https://api.github.com/graphql"
                                  :rest-url                    "https://api.github.com"
                                  :oauth-token        #profile {:develop   #env BACKEND_GITHUB_OAUTH_TOKEN
                                                                :stage     #env GITHUB_OAUTH_TOKEN}}

 :platform.system/clojars-client {:service-name                :service-clojars
                                  :repo-url                    "https://clojars.org/repo"
                                  :rest-url                    "https://clojars.org/api"}


 :platform.system/twitter-client {:service-name                :service-twitter
                                  :rest-url                    "https://api.twitter.com/2"
                                  :oauth-token        #profile {:develop   #env BACKEND_TWITTER_OAUTH_TOKEN
                                                                :stage     #env TWITTER_OAUTH_TOKEN}}

 :platform.system/slack-client   {:service-name                :service-slack
                                  :rest-url                    "https://slack.com/api"
                                  :oauth-token-user   #profile {:develop   #env BACKEND_SLACK_OAUTH_TOKEN_USER
                                                                :stage     #env SLACK_OAUTH_TOKEN_USER}
                                  :oauth-token-bot    #profile {:develop   #env BACKEND_SLACK_OAUTH_TOKEN_BOT
                                                                :stage     #env SLACK_OAUTH_TOKEN_BOT}}}
